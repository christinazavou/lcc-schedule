.contact-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

.contact-form {
  background-color: var(--text-color);
  border-radius: 0px;
  padding: 30px;
  box-shadow: 0px 1px 8px 4px var(--light-bg-color);
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 5fr;
  grid-gap: 5px;
}

/* We want the inner grid container to span across both columns of the outer grid container. 
To do this, we can use the grid-column property to specify the start and end columns of the grid-inner container.
The syntax for grid-column is grid-column: <start-column> / <end-column>. 
In this case, we want the grid inner container to start at the first column and end at the third column. 
However, since there are only two columns in the outer grid container, specifying 3 as the end column will simply 
make the grid inner container span across both columns. */
.input-container {
  display: grid;
  grid-template-columns: 1fr 5fr;
  grid-gap: 5px;
  grid-column: 1/3;
}

.contact-form label {
  margin-bottom: 8px;
  font-weight: bold;
  color: var(--primary-color);
  text-align: left;
  display: flex;
  align-items: center;
  grid-column: 1;
}

.contact-form textarea {
  width: 100%;
  padding: 12px;
  margin-bottom: 8px;
  border: 1px solid var(--secondary-color);
  border-radius: 4px;
  font-size: 16px;
  line-height: 1.5;
  resize: vertical;
  box-sizing: border-box;
  grid-column: 2;
}

.contact-form textarea:focus {
  border-color: var(--primary-color);
  outline: none;
}

.button-container {
  /* background-color: var(--bg-color); */
  color: var(--text-color);
  border: none;
  padding: 12px 12px;
  font-size: 18px;
  border-radius: 4px;
  cursor: pointer;
  width: 100%;
  box-sizing: border-box;
  transition: background-color 0.3s ease;
  line-height: 1.5;
  grid-column: 2;
  grid-row: 2;
  display: grid;
  grid-template-columns: 1fr;
}

.button-container.enabled {
  background-color: var(--primary-color);
}

.button-container.disabled {
  background-color: var(--light-bg-color);
  cursor: not-allowed;
}

.button-container.disabled button {
  cursor: not-allowed;
}
